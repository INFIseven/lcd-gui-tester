name: macOS Build and Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: macos-13
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Qt6
      run: |
        # Install Qt6 first
        brew install qt6
        
        # Handle cmake installation (may already exist)
        if ! command -v cmake >/dev/null 2>&1; then
          brew install cmake
        else
          echo "CMake already installed: $(cmake --version)"
        fi
        
    - name: Configure CMake
      run: |
        export Qt6_DIR=$(brew --prefix qt6)/lib/cmake/Qt6
        cmake -B build -DCMAKE_BUILD_TYPE=Release -DQt6_DIR=$Qt6_DIR
      
    - name: Build
      run: cmake --build build --config Release
      
    - name: Package macOS App
      run: |
        # CMake already created the app bundle at build/lcd-gui-tester.app
        # Just rename it to have a nicer name
        mv "build/lcd-gui-tester.app" "LCD GUI Tester.app"
        
        # Update Info.plist with better metadata
        cat > "LCD GUI Tester.app/Contents/Info.plist" << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>lcd-gui-tester</string>
            <key>CFBundleIdentifier</key>
            <string>com.infi7.lcd-gui-tester</string>
            <key>CFBundleName</key>
            <string>LCD GUI Tester</string>
            <key>CFBundleDisplayName</key>
            <string>LCD GUI Tester</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>LSMinimumSystemVersion</key>
            <string>13.0</string>
        </dict>
        </plist>
        EOF
        
        # Use macdeployqt to bundle Qt libraries with verbose output and all modules
        $(brew --prefix qt6)/bin/macdeployqt "LCD GUI Tester.app" -verbose=2 -always-overwrite
        
        # Run macdeployqt a second time to catch any missed dependencies
        $(brew --prefix qt6)/bin/macdeployqt "LCD GUI Tester.app" -verbose=2
        
        # Manually ensure QtDBus framework is included since it's often missed
        QT_LIB_PATH=$(brew --prefix qt6)/lib
        APP_FRAMEWORKS="LCD GUI Tester.app/Contents/Frameworks"
        
        # List of Qt frameworks that might be missed by macdeployqt
        MISSING_FRAMEWORKS=("QtDBus")
        
        for framework in "${MISSING_FRAMEWORKS[@]}"; do
          if [[ -d "$QT_LIB_PATH/${framework}.framework" ]] && [[ ! -d "$APP_FRAMEWORKS/${framework}.framework" ]]; then
            echo "Copying missing ${framework} framework..."
            cp -R "$QT_LIB_PATH/${framework}.framework" "$APP_FRAMEWORKS/"
            
            # Fix the framework's install name
            install_name_tool -id "@rpath/${framework}.framework/Versions/A/${framework}" \
              "$APP_FRAMEWORKS/${framework}.framework/Versions/A/${framework}"
              
            # Update any references in the main executable
            install_name_tool -change \
              "$QT_LIB_PATH/${framework}.framework/Versions/A/${framework}" \
              "@rpath/${framework}.framework/Versions/A/${framework}" \
              "LCD GUI Tester.app/Contents/MacOS/lcd-gui-tester"
          fi
        done
        
        # Verify all Qt dependencies are properly linked
        echo "Checking Qt dependencies in the final app..."
        otool -L "LCD GUI Tester.app/Contents/MacOS/lcd-gui-tester"
        
        # Create DMG
        hdiutil create -volname "LCD GUI Tester" -srcfolder "LCD GUI Tester.app" -ov -format UDZO lcd-gui-tester-macos.dmg
        
    - name: Upload Package
      uses: actions/upload-artifact@v4
      with:
        name: lcd-gui-tester-macos
        path: lcd-gui-tester-macos.dmg
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: lcd-gui-tester-macos.dmg
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}